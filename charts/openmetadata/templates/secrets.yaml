# Below block is required to create a secret for application once pre-upgrade helm hooks are applied.
---
{{- if not .Values.openmetadata.config.fernetkey.secretRef }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "OpenMetadata.fullname" . }}-fernetkey-secret
type: Opaque
data:
{{- with .Values.openmetadata.config.fernetkey }}
  FERNET_KEY: {{ .value | b64enc | quote }}
{{ end }}
{{ end }}

{{- if .Values.openmetadata.config.database.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "OpenMetadata.fullname" . }}-db-secret
type: Opaque
data:
{{- with .Values.openmetadata.config.database }}
  DB_HOST: {{ .host | b64enc }}
  DB_PORT: {{ .port | toString | b64enc }}
  DB_DRIVER_CLASS: {{ .driverClass | b64enc }}
  DB_SCHEME: {{ .dbScheme | b64enc }}
  OM_DATABASE: {{ .databaseName | b64enc }}
  DB_PARAMS: {{ .dbParams | b64enc | quote }}
  DB_USER: {{ .auth.username | b64enc }}
{{ end }}
{{ end }}

{{- if .Values.openmetadata.config.elasticsearch.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "OpenMetadata.fullname" . }}-search-secret
type: Opaque
data:
{{- with .Values.openmetadata.config.elasticsearch }}
  ELASTICSEARCH_HOST: {{ .host | quote | b64enc }}
  SEARCH_TYPE: {{ .searchType | quote | b64enc }}
  ELASTICSEARCH_PORT: {{ .port | quote | b64enc }}
  ELASTICSEARCH_SCHEME: {{ .scheme | quote | b64enc }}
  ELASTICSEARCH_INDEX_MAPPING_LANG: {{ .searchIndexMappingLanguage | quote| b64enc }}
  ELASTICSEARCH_KEEP_ALIVE_TIMEOUT_SECS: {{ .keepAliveTimeoutSecs | quote | b64enc }}
  {{- if .trustStore.enabled }}
  ELASTICSEARCH_TRUST_STORE_PATH: {{ .trustStore.path | b64enc }}
  {{ end }}
  {{- if .auth.enabled }}
  ELASTICSEARCH_USER: {{ .auth.username | quote | b64enc }}
  {{ end }}
{{ end }}
{{ end }}

{{- if .Values.openmetadata.config.pipelineServiceClientConfig.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "OpenMetadata.fullname" . }}-pipeline-secret
type: Opaque
data:
{{- with .Values.openmetadata.config.pipelineServiceClientConfig }}
  PIPELINE_SERVICE_CLIENT_ENABLED: {{ .enabled | quote | b64enc }}
  PIPELINE_SERVICE_CLIENT_CLASS_NAME: {{ .className | quote | b64enc }}
  PIPELINE_SERVICE_IP_INFO_ENABLED: {{ .ingestionIpInfoEnabled | quote | b64enc }}
  PIPELINE_SERVICE_CLIENT_ENDPOINT: {{ .apiEndpoint | b64enc }}
  PIPELINE_SERVICE_CLIENT_VERIFY_SSL: {{ .verifySsl | quote | b64enc }}
  PIPELINE_SERVICE_CLIENT_HOST_IP: {{ .hostIp | b64enc }}
  PIPELINE_SERVICE_CLIENT_HEALTH_CHECK_INTERVAL: {{ .healthCheckInterval | quote | b64enc }}
  PIPELINE_SERVICE_CLIENT_SSL_CERT_PATH: {{ .sslCertificatePath | quote | b64enc }}
  SERVER_HOST_API_URL: {{ .metadataApiEndpoint | b64enc }}
  {{- if .auth.enabled }}
  AIRFLOW_USERNAME: {{ .auth.username | b64enc }}
  {{- end }}
{{ end }}
{{ end }}

{{- if .Values.openmetadata.config.authorizer.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "OpenMetadata.fullname" . }}-authorizer-secret
type: Opaque
data:
{{- with .Values.openmetadata.config.authorizer }}
  AUTHORIZER_CLASS_NAME: {{ .className | quote | b64enc }}
  AUTHORIZER_REQUEST_FILTER: {{ .containerRequestFilter | quote | b64enc }}
  AUTHORIZER_PRINCIPAL_DOMAIN: {{ .principalDomain | quote | b64enc }}
  AUTHORIZER_ENFORCE_PRINCIPAL_DOMAIN: {{ .enforcePrincipalDomain | quote | b64enc }}
  AUTHORIZER_ENABLE_SECURE_SOCKET: {{ .enableSecureSocketConnection | quote | b64enc }}
{{ end }}
  AUTHORIZER_ADMIN_PRINCIPALS: {{ include "OpenMetadata.commaJoinedQuotedEncodedList" (dict "value" .Values.openmetadata.config.authorizer.initialAdmins ) }}
  AUTHORIZER_ALLOWED_REGISTRATION_DOMAIN: {{ include "OpenMetadata.commaJoinedQuotedEncodedList" (dict "value" .Values.openmetadata.config.authorizer.allowedEmailRegistrationDomains) }}
{{ end }}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "OpenMetadata.fullname" . }}-omd-secret
type: Opaque
data:
{{- with .Values.openmetadata.config.openmetadata }}
  SERVER_HOST: {{ .host | b64enc }}
  OM_URI: {{ .uri | quote | b64enc }}
  SERVER_PORT: {{ .port | quote | b64enc }}
  SERVER_ADMIN_PORT: {{ .adminPort | quote | b64enc }}
{{ end }}

{{- if .Values.openmetadata.config.smtpConfig.enableSmtpServer }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "OpenMetadata.fullname" . }}-smtp-secret
type: Opaque
data:
{{- with .Values.openmetadata.config.smtpConfig }}
  AUTHORIZER_ENABLE_SMTP: {{ .enableSmtpServer | quote | b64enc }}
  OM_EMAIL_ENTITY: {{ .emailingEntity | quote | b64enc }}
  OM_SUPPORT_URL: {{ .supportUrl | quote | b64enc }}
  SMTP_SERVER_STRATEGY: {{ .transportationStrategy | quote | b64enc }}
  OPENMETADATA_SERVER_URL: {{ .openMetadataUrl | quote | b64enc }}
  SMTP_SERVER_ENDPOINT: {{ .serverEndpoint | quote | b64enc }}
  SMTP_SERVER_PORT: {{ .serverPort | quote | b64enc }}
  OPENMETADATA_SMTP_SENDER_MAIL: {{ .senderMail | quote | b64enc }}
  SMTP_SERVER_USERNAME: {{ .username | quote | b64enc }}
{{ end }}
{{ end }}

{{- if .Values.openmetadata.config.secretsManager.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "OpenMetadata.fullname" . }}-secretsmanager-secret
type: Opaque
data:
{{- with .Values.openmetadata.config.secretsManager }}
  SECRET_MANAGER: {{ .provider | b64enc }}
  {{- if .additionalParameters.enabled }}
  OM_SM_REGION: {{ .additionalParameters.region | quote | b64enc }}
  {{ end }}
{{ end }}
{{ end }}

{{- if .Values.openmetadata.config.jwtTokenConfiguration.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "OpenMetadata.fullname" . }}-jwt-secret
type: Opaque
data:
{{- with .Values.openmetadata.config.jwtTokenConfiguration }}
  RSA_PUBLIC_KEY_FILE_PATH: {{ .rsapublicKeyFilePath | quote | b64enc }}
  RSA_PRIVATE_KEY_FILE_PATH: {{ .rsaprivateKeyFilePath | quote | b64enc }}
  JWT_ISSUER: {{ .jwtissuer | quote | b64enc }}
  JWT_KEY_ID: {{ .keyId | quote | b64enc }}
{{ end }}
{{ end }}

{{- if .Values.openmetadata.config.web.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "OpenMetadata.fullname" . }}-web-secret
type: Opaque
data:
{{- with .Values.openmetadata.config.web }}
  WEB_CONF_URI_PATH: {{ .uriPath | quote | b64enc }}
  WEB_CONF_HSTS_ENABLED: {{ .hsts.enabled | quote | b64enc }}
  WEB_CONF_HSTS_MAX_AGE: {{ .hsts.maxAge | quote | b64enc }}
  WEB_CONF_HSTS_INCLUDE_SUBDOMAINS: {{ .hsts.includeSubDomains | quote | b64enc }}
  WEB_CONF_HSTS_PRELOAD: {{ .hsts.preload | quote | b64enc }}
  WEB_CONF_FRAME_OPTION_ENABLED: {{ .frameOptions.enabled | quote | b64enc }}
  WEB_CONF_FRAME_OPTION: {{ .frameOptions.option | quote | b64enc }}
  WEB_CONF_FRAME_ORIGIN: {{ .frameOptions.origin | quote | b64enc }}
  WEB_CONF_CONTENT_TYPE_OPTIONS_ENABLED: {{ .contentTypeOptions.enabled | quote | b64enc }}
  WEB_CONF_XSS_PROTECTION_ENABLED: {{ .xssProtection.enabled | quote | b64enc }}
  WEB_CONF_XSS_PROTECTION_ON: {{ .xssProtection.onXss | quote | b64enc }}
  WEB_CONF_XSS_PROTECTION_BLOCK: {{ .xssProtection.block | quote | b64enc }}
  WEB_CONF_XSS_CSP_ENABLED: {{ .csp.enabled | quote | b64enc }}
  WEB_CONF_XSS_CSP_POLICY: {{ .csp.policy | quote | b64enc }}
  WEB_CONF_XSS_CSP_REPORT_ONLY_POLICY: {{ .csp.reportOnlyPolicy | quote | b64enc }}
  WEB_CONF_REFERRER_POLICY_ENABLED: {{ .referrerPolicy.enabled | quote | b64enc }}
  WEB_CONF_REFERRER_POLICY_OPTION: {{ .referrerPolicy.option | quote | b64enc }}
  WEB_CONF_PERMISSION_POLICY_ENABLED: {{ .permissionPolicy.enabled | quote | b64enc }}
  WEB_CONF_PERMISSION_POLICY_OPTION: {{ .permissionPolicy.option | quote | b64enc }}
{{ end }}
{{ end }}

{{- if .Values.openmetadata.config.authentication.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "OpenMetadata.fullname" . }}-authentication-secret
type: Opaque
data:
  AUTHENTICATION_PUBLIC_KEYS: {{ include "OpenMetadata.commaJoinedQuotedEncodedList" (dict "value" .Values.openmetadata.config.authentication.publicKeys) }}
  AUTHENTICATION_JWT_PRINCIPAL_CLAIMS: {{ include "OpenMetadata.commaJoinedQuotedEncodedList" (dict "value" .Values.openmetadata.config.authentication.jwtPrincipalClaims) }}
{{- with .Values.openmetadata.config.authentication }}
  AUTHENTICATION_PROVIDER: {{ .provider | quote | b64enc }}
  AUTHENTICATION_RESPONSE_TYPE: {{ .responseType | quote | b64enc }}
  AUTHENTICATION_AUTHORITY: {{ .authority | quote | b64enc }}
  AUTHENTICATION_CLIENT_ID: {{ .clientId | quote | b64enc }}
  AUTHENTICATION_CALLBACK_URL: {{ .callbackUrl | quote | b64enc }}
  AUTHENTICATION_ENABLE_SELF_SIGNUP: {{ .enableSelfSignup | quote | b64enc }}
{{- if eq .provider "ldap" }}
  AUTHENTICATION_LDAP_HOST: {{ .ldapConfiguration.host | b64enc }}
  AUTHENTICATION_LDAP_PORT: {{ .ldapConfiguration.port | quote | b64enc }}
  AUTHENTICATION_LOOKUP_ADMIN_DN: {{ .ldapConfiguration.dnAdminPrincipal | quote | b64enc }}
  AUTHENTICATION_USER_LOOKUP_BASEDN: {{ .ldapConfiguration.userBaseDN | quote | b64enc }}
  AUTHENTICATION_USER_MAIL_ATTR: {{ .ldapConfiguration.mailAttributeName | quote | b64enc }}
  AUTHENTICATION_LDAP_POOL_SIZE: {{ .ldapConfiguration.maxPoolSize | quote | b64enc }}
  AUTHENTICATION_LDAP_SSL_ENABLED: {{ .ldapConfiguration.sslEnabled | quote | b64enc }}
  AUTHENTICATION_LDAP_TRUSTSTORE_TYPE: {{ .ldapConfiguration.truststoreConfigType | quote | b64enc }}
  {{- if eq .ldapConfiguration.truststoreConfigType "CustomTrustStore" }}
  AUTHENTICATION_LDAP_TRUSTSTORE_PATH: {{ .ldapConfiguration.trustStoreConfig.customTrustManagerConfig.trustStoreFilePath | quote | b64enc }}
  AUTHENTICATION_LDAP_SSL_KEY_FORMAT: {{ .ldapConfiguration.trustStoreConfig.customTrustManagerConfig.trustStoreFileFormat | quote | b64enc }}
  AUTHENTICATION_LDAP_SSL_VERIFY_CERT_HOST: {{ .ldapConfiguration.trustStoreConfig.customTrustManagerConfig.verifyHostname | quote | b64enc }}
  AUTHENTICATION_LDAP_EXAMINE_VALIDITY_DATES: {{ .ldapConfiguration.trustStoreConfig.customTrustManagerConfig.examineValidityDates | quote | b64enc }}
  {{ end }}
  {{- if eq .ldapConfiguration.truststoreConfigType "HostName" }}
  AUTHENTICATION_LDAP_ALLOW_WILDCARDS: {{ .ldapConfiguration.trustStoreConfig.hostNameConfig.allowWildCards | quote | b64enc }}
  AUTHENTICATION_LDAP_ALLOWED_HOSTNAMES: {{ .Values.openmetadata.config.authentication.ldapConfiguration.trustStoreConfig.hostNameConfig.acceptableHostNames | b64enc}}
  {{ end }}
  {{- if eq .ldapConfiguration.truststoreConfigType "JVMDefault" }}
  AUTHENTICATION_LDAP_SSL_VERIFY_CERT_HOST: {{ .ldapConfiguration.trustStoreConfig.jvmDefaultConfig.verifyHostname | quote | b64enc }}
  {{ end }}
  {{- if eq .ldapConfiguration.truststoreConfigType "TrustAll" }}
  AUTHENTICATION_LDAP_EXAMINE_VALIDITY_DATES: {{ .ldapConfiguration.trustStoreConfig.trustAllConfig.examineValidityDates | quote | b64enc }}
  {{ end }}
{{ end }}
{{- if eq .provider "saml" }}
  SAML_DEBUG_MODE: {{ .saml.debugMode | quote | b64enc }}
  SAML_IDP_ENTITY_ID: {{ .saml.idp.entityId | quote | b64enc }}
  SAML_IDP_SSO_LOGIN_URL: {{ .saml.idp.ssoLoginUrl | quote | b64enc }}
  SAML_AUTHORITY_URL: {{ .saml.idp.authorityUrl | quote | b64enc }}
  SAML_IDP_NAME_ID: {{ .saml.idp.nameId | quote | b64enc }}
  SAML_SP_ENTITY_ID: {{ .saml.sp.entityId | quote | b64enc }}
  SAML_SP_ACS: {{ .saml.sp.acs | quote | b64enc }}
  SAML_SP_CALLBACK: {{ .saml.sp.callback | quote | b64enc }}
  SAML_STRICT_MODE: {{ .saml.security.strictMode | quote | b64enc }}
  SAML_SP_TOKEN_VALIDITY: {{ .saml.security.tokenValidity | quote | b64enc }}
  SAML_SEND_ENCRYPTED_NAME_ID: {{ .saml.security.sendEncryptedNameId | quote | b64enc }}
  SAML_SEND_SIGNED_AUTH_REQUEST: {{ .saml.security.sendSignedAuthRequest | quote | b64enc }}
  SAML_SIGNED_SP_METADATA: {{ .saml.security.signSpMetadata | quote | b64enc }}
  SAML_WANT_MESSAGE_SIGNED: {{ .saml.security.wantMessagesSigned | quote | b64enc }}
  SAML_WANT_ASSERTION_SIGNED: {{ .saml.security.wantAssertionsSigned | quote | b64enc }}
  SAML_WANT_ASSERTION_ENCRYPTED: {{ .saml.security.wantAssertionEncrypted | quote | b64enc }}
  SAML_WANT_NAME_ID_ENCRYPTED: {{ .saml.security.wantNameIdEncrypted | quote | b64enc }}
  # Key Store should only be considered if either wantAssertionEncrypted or wantNameIdEncrypted will be true
  {{- if or .saml.security.wantAssertionEncrypted .saml.security.wantNameIdEncrypted }}
  SAML_KEYSTORE_FILE_PATH: {{ .saml.security.keyStoreFilePath | quote | b64enc }}
  {{ end }}
{{ end }}
{{ end }}
{{ end }}

{{- if .Values.openmetadata.config.eventMonitor.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "OpenMetadata.fullname" . }}-eventmonitor-secret
type: Opaque
data:
{{- with .Values.openmetadata.config.eventMonitor }}
  EVENT_MONITOR: {{ .type | b64enc }}
  EVENT_MONITOR_BATCH_SIZE: {{ .batchSize | quote | b64enc }}
{{ end }}
  EVENT_MONITOR_PATH_PATTERN: {{ include "OpenMetadata.commaJoinedQuotedEncodedList" (dict "value" .Values.openmetadata.config.eventMonitor.pathPattern) }}
  EVENT_MONITOR_LATENCY: {{ include "OpenMetadata.commaJoinedQuotedEncodedList" (dict "value" .Values.openmetadata.config.eventMonitor.latency) }}
{{ end }}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "OpenMetadata.fullname" . }}-config-secret
type: Opaque
data:
{{- with .Values.openmetadata.config }}
  LOG_LEVEL: {{ .logLevel | b64enc }}
  OPENMETADATA_CLUSTER_NAME: {{ .clusterName | b64enc }}
{{ end }}